/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Cama } from "./components/hcw-cama/cama";
export namespace Components {
    interface HcwBlueButton {
    }
    interface HcwCama {
        "camas": Array<Cama>;
        "init": ({ IdPrestador, IdInstitucion }: { IdPrestador?: number; IdInstitucion?: number; }) => Promise<void>;
        "refresh": ({ IdPrestador, IdInstitucion }: { IdPrestador?: number; IdInstitucion?: number; }) => Promise<void>;
    }
    interface HcwMenu {
    }
    interface UcSideDrawer {
        "open": boolean;
        "title": string;
    }
}
declare global {
    interface HTMLHcwBlueButtonElement extends Components.HcwBlueButton, HTMLStencilElement {
    }
    var HTMLHcwBlueButtonElement: {
        prototype: HTMLHcwBlueButtonElement;
        new (): HTMLHcwBlueButtonElement;
    };
    interface HTMLHcwCamaElement extends Components.HcwCama, HTMLStencilElement {
    }
    var HTMLHcwCamaElement: {
        prototype: HTMLHcwCamaElement;
        new (): HTMLHcwCamaElement;
    };
    interface HTMLHcwMenuElement extends Components.HcwMenu, HTMLStencilElement {
    }
    var HTMLHcwMenuElement: {
        prototype: HTMLHcwMenuElement;
        new (): HTMLHcwMenuElement;
    };
    interface HTMLUcSideDrawerElement extends Components.UcSideDrawer, HTMLStencilElement {
    }
    var HTMLUcSideDrawerElement: {
        prototype: HTMLUcSideDrawerElement;
        new (): HTMLUcSideDrawerElement;
    };
    interface HTMLElementTagNameMap {
        "hcw-blue-button": HTMLHcwBlueButtonElement;
        "hcw-cama": HTMLHcwCamaElement;
        "hcw-menu": HTMLHcwMenuElement;
        "uc-side-drawer": HTMLUcSideDrawerElement;
    }
}
declare namespace LocalJSX {
    interface HcwBlueButton {
    }
    interface HcwCama {
        "camas"?: Array<Cama>;
        "onChange"?: (event: CustomEvent<object>) => void;
        "onError"?: (event: CustomEvent<string>) => void;
        "onLoad"?: (event: CustomEvent<object>) => void;
    }
    interface HcwMenu {
    }
    interface UcSideDrawer {
        "open"?: boolean;
        "title"?: string;
    }
    interface IntrinsicElements {
        "hcw-blue-button": HcwBlueButton;
        "hcw-cama": HcwCama;
        "hcw-menu": HcwMenu;
        "uc-side-drawer": UcSideDrawer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "hcw-blue-button": LocalJSX.HcwBlueButton & JSXBase.HTMLAttributes<HTMLHcwBlueButtonElement>;
            "hcw-cama": LocalJSX.HcwCama & JSXBase.HTMLAttributes<HTMLHcwCamaElement>;
            "hcw-menu": LocalJSX.HcwMenu & JSXBase.HTMLAttributes<HTMLHcwMenuElement>;
            "uc-side-drawer": LocalJSX.UcSideDrawer & JSXBase.HTMLAttributes<HTMLUcSideDrawerElement>;
        }
    }
}
